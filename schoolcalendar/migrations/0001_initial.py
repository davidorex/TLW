# Generated by Django 5.1.2 on 2024-11-08 08:45

import core.utils.metadata
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import schoolcalendar.models.quarter
import schoolcalendar.models.term
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this object', primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Soft deletion status')),
                ('created_at', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was created')),
                ('modified_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was last modified')),
                ('change_reason', models.CharField(help_text='Reason for this change', max_length=255, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='JSON metadata storage', validators=[core.utils.metadata.validate_metadata_schema])),
                ('quarter_type', models.CharField(choices=[('Q1', 'Quarter 1'), ('Q2', 'Quarter 2'), ('Q3', 'Quarter 3'), ('Q4', 'Quarter 4')], db_index=True, default='Q1', max_length=2)),
                ('sequence', models.PositiveSmallIntegerField(db_index=True, default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)])),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('created_by', models.ForeignKey(help_text='User who created this object', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User who last modified this object', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['term', 'sequence'],
            },
        ),
        migrations.CreateModel(
            name='PeriodTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration', models.DurationField()),
                ('description', models.TextField(blank=True)),
                ('quarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period_templates', to='schoolcalendar.quarter')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalTerm',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this object')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Soft deletion status')),
                ('created_at', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was created')),
                ('change_reason', models.CharField(help_text='Reason for this change', max_length=255, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='JSON metadata storage', validators=[core.utils.metadata.validate_metadata_schema])),
                ('term_type', models.CharField(choices=[('SEM1', 'Semester 1'), ('SEM2', 'Semester 2'), ('TRI1', 'Trimester 1'), ('TRI2', 'Trimester 2'), ('TRI3', 'Trimester 3')], db_index=True, default='SEM1', max_length=4)),
                ('sequence', models.IntegerField(default=1, help_text='Order within year (1-based)', validators=[django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateField(db_index=True, help_text='First day of term')),
                ('end_date', models.DateField(db_index=True, help_text='Last day of term')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(blank=True, db_constraint=False, default=schoolcalendar.models.term.get_or_create_default_school_year, help_text='Associated academic year', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='schoolcalendar.schoolyear')),
            ],
            options={
                'verbose_name': 'historical Term',
                'verbose_name_plural': 'historical Terms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this object', primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Soft deletion status')),
                ('created_at', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was created')),
                ('modified_at', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was last modified')),
                ('change_reason', models.CharField(help_text='Reason for this change', max_length=255, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='JSON metadata storage', validators=[core.utils.metadata.validate_metadata_schema])),
                ('term_type', models.CharField(choices=[('SEM1', 'Semester 1'), ('SEM2', 'Semester 2'), ('TRI1', 'Trimester 1'), ('TRI2', 'Trimester 2'), ('TRI3', 'Trimester 3')], db_index=True, default='SEM1', max_length=4)),
                ('sequence', models.IntegerField(default=1, help_text='Order within year (1-based)', validators=[django.core.validators.MinValueValidator(1)])),
                ('start_date', models.DateField(db_index=True, help_text='First day of term')),
                ('end_date', models.DateField(db_index=True, help_text='Last day of term')),
                ('created_by', models.ForeignKey(help_text='User who created this object', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(help_text='User who last modified this object', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(default=schoolcalendar.models.term.get_or_create_default_school_year, help_text='Associated academic year', on_delete=django.db.models.deletion.PROTECT, related_name='terms', to='schoolcalendar.schoolyear')),
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
                'ordering': ['year', 'sequence'],
            },
        ),
        migrations.AddField(
            model_name='quarter',
            name='term',
            field=models.ForeignKey(help_text='Parent semester term', on_delete=django.db.models.deletion.CASCADE, related_name='quarters', to='schoolcalendar.term', validators=[schoolcalendar.models.quarter.validate_semester_term]),
        ),
        migrations.CreateModel(
            name='HistoricalQuarter',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this object')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Soft deletion status')),
                ('created_at', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was created')),
                ('change_reason', models.CharField(help_text='Reason for this change', max_length=255, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='JSON metadata storage', validators=[core.utils.metadata.validate_metadata_schema])),
                ('quarter_type', models.CharField(choices=[('Q1', 'Quarter 1'), ('Q2', 'Quarter 2'), ('Q3', 'Quarter 3'), ('Q4', 'Quarter 4')], db_index=True, default='Q1', max_length=2)),
                ('sequence', models.PositiveSmallIntegerField(db_index=True, default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)])),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('term', models.ForeignKey(blank=True, db_constraint=False, help_text='Parent semester term', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='schoolcalendar.term', validators=[schoolcalendar.models.quarter.validate_semester_term])),
            ],
            options={
                'verbose_name': 'historical quarter',
                'verbose_name_plural': 'historical quarters',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='PeriodContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=100)),
                ('content_id', models.PositiveIntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('period_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='schoolcalendar.periodtemplate')),
            ],
            options={
                'unique_together': {('content_type', 'content_id', 'period_template')},
            },
        ),
        migrations.AddIndex(
            model_name='term',
            index=models.Index(fields=['start_date', 'end_date'], name='schoolcalen_start_d_06fc6f_idx'),
        ),
        migrations.AddIndex(
            model_name='term',
            index=models.Index(fields=['year', 'sequence'], name='schoolcalen_year_id_ffaa87_idx'),
        ),
        migrations.AddConstraint(
            model_name='term',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__gt', models.F('start_date'))), name='valid_term_dates'),
        ),
        migrations.AlterUniqueTogether(
            name='term',
            unique_together={('year', 'sequence'), ('year', 'term_type')},
        ),
        migrations.AddIndex(
            model_name='quarter',
            index=models.Index(fields=['start_date', 'end_date'], name='schoolcalen_start_d_ec0d5d_idx'),
        ),
        migrations.AddIndex(
            model_name='quarter',
            index=models.Index(fields=['term', 'sequence'], name='schoolcalen_term_id_f67df8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='quarter',
            unique_together={('term', 'quarter_type'), ('term', 'sequence')},
        ),
    ]
