# Generated by Django 5.1.2 on 2024-11-12 13:07

import core.utils.metadata
import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('schoolcalendar', '0009_alter_periodcontent_template'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalPeriodTemplate',
            fields=[
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this object')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Soft deletion status')),
                ('created_at', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was created')),
                ('change_reason', models.CharField(help_text='Reason for this change', max_length=255, null=True)),
                ('metadata', models.JSONField(default=dict, help_text='JSON metadata storage', validators=[core.utils.metadata.validate_metadata_schema])),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('schedule_type', models.CharField(choices=[('STD', 'Standard Day'), ('EXT', 'Extended Day'), ('RED', 'Reduced Day'), ('MOD', 'Modified Day')], db_index=True, default='STD', max_length=3)),
                ('effective_from', models.DateField(db_index=True, default=datetime.date.today)),
                ('morning_periods', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('afternoon_periods', models.PositiveSmallIntegerField(default=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('evening_periods', models.PositiveSmallIntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('period_length', models.PositiveIntegerField(default=40, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(120)])),
                ('passing_time', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)])),
                ('first_period', models.TimeField(default=datetime.time(7, 40))),
                ('is_default', models.BooleanField(default=False)),
                ('version', models.PositiveIntegerField(db_index=True, default=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical period template',
                'verbose_name_plural': 'historical period templates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterModelOptions(
            name='periodtemplate',
            options={'ordering': ['-effective_from', 'name']},
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='afternoon_periods',
            field=models.PositiveSmallIntegerField(default=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)]),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='change_reason',
            field=models.CharField(help_text='Reason for this change', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='created_at',
            field=model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was created'),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this object', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='deleted',
            field=models.DateTimeField(db_index=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='deleted_by_cascade',
            field=models.BooleanField(default=False, editable=False),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='effective_from',
            field=models.DateField(db_index=True, default=datetime.date.today),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='evening_periods',
            field=models.PositiveSmallIntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)]),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='first_period',
            field=models.TimeField(default=datetime.time(7, 40)),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Soft deletion status'),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='metadata',
            field=models.JSONField(default=dict, help_text='JSON metadata storage', validators=[core.utils.metadata.validate_metadata_schema]),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='modified_at',
            field=model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, help_text='Timestamp when object was last modified'),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='modified_by',
            field=models.ForeignKey(help_text='User who last modified this object', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='morning_periods',
            field=models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)]),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='passing_time',
            field=models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(30)]),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='period_length',
            field=models.PositiveIntegerField(default=40, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(120)]),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='schedule_type',
            field=models.CharField(choices=[('STD', 'Standard Day'), ('EXT', 'Extended Day'), ('RED', 'Reduced Day'), ('MOD', 'Modified Day')], db_index=True, default='STD', max_length=3),
        ),
        migrations.AddField(
            model_name='periodtemplate',
            name='version',
            field=models.PositiveIntegerField(db_index=True, default=1),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='id',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for this object', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='periodtemplate',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AddIndex(
            model_name='periodtemplate',
            index=models.Index(fields=['effective_from', 'version'], name='schoolcalen_effecti_5d3dc9_idx'),
        ),
        migrations.AddIndex(
            model_name='periodtemplate',
            index=models.Index(fields=['name', 'version'], name='schoolcalen_name_da206d_idx'),
        ),
        migrations.AddField(
            model_name='historicalperiodtemplate',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalperiodtemplate',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalperiodtemplate',
            name='modified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this object', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
    ]
